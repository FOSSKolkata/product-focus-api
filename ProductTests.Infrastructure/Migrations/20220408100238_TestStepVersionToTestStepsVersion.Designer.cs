// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductTests.Infrastructure;

namespace ProductTests.Infrastructure.Migrations
{
    [DbContext(typeof(ProductTestDbContext))]
    [Migration("20220408100238_TestStepVersionToTestStepsVersion")]
    partial class TestStepVersionToTestStepsVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("producttest")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence("EntityFrameworkHiLoSequence")
                .IncrementsBy(10);

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseAggregate.TestCase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Preconditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestCases");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseAggregate.TestStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("StepNo")
                        .HasColumnType("bigint");

                    b.Property<long>("TestCaseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestCaseId");

                    b.ToTable("TestSteps");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseVersionAggregate.TestCaseVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIncluded")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Preconditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResultStatus")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestCasesVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseVersionAggregate.TestStepVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpectedResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResultStatus")
                        .HasColumnType("int");

                    b.Property<long>("StepNo")
                        .HasColumnType("bigint");

                    b.Property<long>("TestCaseVersionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestCaseVersionId");

                    b.ToTable("TestStepsVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductDocumentationId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SprintId")
                        .HasColumnType("bigint");

                    b.Property<int>("TestType")
                        .HasColumnType("int");

                    b.Property<long?>("WorkItemId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("TestPlans");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestSuite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TestPlanId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestPlanId");

                    b.ToTable("TestSuites");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestSuiteTestCaseMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TestCaseId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TestSuiteId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestCaseId");

                    b.HasIndex("TestSuiteId");

                    b.ToTable("TestSuiteTestCaseMappings");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestPlanVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductDocumentationId")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("RunningStatus")
                        .HasColumnType("int");

                    b.Property<long?>("SprintId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TestPlanId")
                        .HasColumnType("bigint");

                    b.Property<int>("TestType")
                        .HasColumnType("int");

                    b.Property<long?>("WorkItemId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestPlanId");

                    b.ToTable("TestPlansVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestSuiteTestCaseMappingVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TestCaseVersionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TestSuiteVersionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestCaseVersionId");

                    b.HasIndex("TestSuiteVersionId");

                    b.ToTable("TestSuiteTestCaseMappingsVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestSuiteVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TestPlanVersionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestPlanVersionId");

                    b.ToTable("TestSuitesVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseAggregate.TestStep", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestCaseAggregate.TestCase", "TestCase")
                        .WithMany("TestSteps")
                        .HasForeignKey("TestCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestCase");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseVersionAggregate.TestStepVersion", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestCaseVersionAggregate.TestCaseVersion", "TestCaseVersion")
                        .WithMany("TestStepsVersion")
                        .HasForeignKey("TestCaseVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestCaseVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestSuite", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestPlanAggregate.TestPlan", "TestPlan")
                        .WithMany("TestSuites")
                        .HasForeignKey("TestPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestPlan");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestSuiteTestCaseMapping", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestCaseAggregate.TestCase", "TestCase")
                        .WithMany()
                        .HasForeignKey("TestCaseId");

                    b.HasOne("ProductTests.Domain.Model.TestPlanAggregate.TestSuite", "TestSuite")
                        .WithMany("TestSuiteTestCaseMappings")
                        .HasForeignKey("TestSuiteId");

                    b.Navigation("TestCase");

                    b.Navigation("TestSuite");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestPlanVersion", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestPlanAggregate.TestPlan", "TestPlan")
                        .WithMany()
                        .HasForeignKey("TestPlanId");

                    b.Navigation("TestPlan");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestSuiteTestCaseMappingVersion", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestCaseVersionAggregate.TestCaseVersion", "TestCaseVersion")
                        .WithMany()
                        .HasForeignKey("TestCaseVersionId");

                    b.HasOne("ProductTests.Domain.Model.TestPlanVersionAggregate.TestSuiteVersion", "TestSuiteVersion")
                        .WithMany("TestSuiteTestCaseMappings")
                        .HasForeignKey("TestSuiteVersionId");

                    b.Navigation("TestCaseVersion");

                    b.Navigation("TestSuiteVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestSuiteVersion", b =>
                {
                    b.HasOne("ProductTests.Domain.Model.TestPlanVersionAggregate.TestPlanVersion", "TestPlanVersion")
                        .WithMany("TestSuitesVersion")
                        .HasForeignKey("TestPlanVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TestPlanVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseAggregate.TestCase", b =>
                {
                    b.Navigation("TestSteps");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestCaseVersionAggregate.TestCaseVersion", b =>
                {
                    b.Navigation("TestStepsVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestPlan", b =>
                {
                    b.Navigation("TestSuites");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanAggregate.TestSuite", b =>
                {
                    b.Navigation("TestSuiteTestCaseMappings");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestPlanVersion", b =>
                {
                    b.Navigation("TestSuitesVersion");
                });

            modelBuilder.Entity("ProductTests.Domain.Model.TestPlanVersionAggregate.TestSuiteVersion", b =>
                {
                    b.Navigation("TestSuiteTestCaseMappings");
                });
#pragma warning restore 612, 618
        }
    }
}
